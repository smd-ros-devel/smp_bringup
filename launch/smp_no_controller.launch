<launch>
  <param name="tf_prefix" value="$(env ROBOT)" />

  <include file="$(find openni_launch)/launch/openni.launch">
    <arg name="camera" value="$(env ROBOT)" />
    <arg name="depth_frame_id" value="/$(env ROBOT)/rgbd" />
    <arg name="rgb_frame_id" value="/$(env ROBOT)/rgbd" />
  </include>

  <group ns="$(env ROBOT)">
    <node pkg="roboteq_nxtgen_controller" name="nxtgen_left_driver_node"
          type="nxtgen_driver_node" output="screen">
      <param name="hardware_id" value="Left RoboteQ Controller" />
      <param name="port" value="/dev/robot/left_motor_controller" />
      <param name="ch1_joint_name" value="wheel_front_left_joint"/>
      <param name="ch2_joint_name" value="wheel_back_left_joint"/>
      <param name="use_encoders" value="true" />
      <param name="operating_mode" value="2" />
      <param name="encoder_ppr" value="420" />
      <param name="ch1_max_motor_rpm" value="72" />
      <param name="ch2_max_motor_rpm" value="72" />
      <param name="invert" value="false" />
      <remap from="joint_states" to="left_joint_states" />
    </node>

    <node pkg="roboteq_nxtgen_controller" name="nxtgen_right_driver_node" 
          type="nxtgen_driver_node" output="screen">
      <param name="hardware_id" value="Right RoboteQ Controller" />
      <param name="port" value="/dev/robot/right_motor_controller" />
      <param name="ch1_joint_name" value="wheel_front_right_joint"/>
      <param name="ch2_joint_name" value="wheel_back_right_joint"/>
      <param name="use_encoders" value="true" />
      <param name="operating_mode" value="2" />
      <param name="encoder_ppr" value="420" />
      <param name="ch1_max_motor_rpm" value="72" />
      <param name="ch2_max_motor_rpm" value="72" />
      <param name="invert" value="true" />
      <remap from="joint_states" to="right_joint_states" />
    </node>

    <node pkg="joint_state_aggregator" name="joint_state_aggregator" type="joint_state_aggregator"
          output="screen" />

    <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher"
          output="screen">
      <rosparam file="$(find smp_bringup)/config/source_list.yaml" command="load" />
      <param name="rate" value="30" />
      <param name="use_gui" value="False" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"
          respawn="true" output="screen" />

    <node name="robot_pose_ekf" pkg="robot_pose_ekf" type="robot_pose_ekf" respawn="true" output="screen">
      <param name="odom_used" value="true" />
      <param name="imu_used" value="false" />
      <param name="vo_used" value="false" />
      <param name="freq" value="30" />
      <remap from="imu_data" to="imu/data" />
    </node>

    <node pkg="hokuyo_node" name="hokuyo_node" type="hokuyo_node" output="screen">
      <param name="port" value="/dev/robot/lidar" />
      <param name="min_ang" value="-2.086213" />
      <param name="max_ang" value="2.092349" />
    </node>

    <node pkg="yei_tss_usb" name="tss_usb_node" type="tss_usb_node" output="screen">
      <param name="port" value="/dev/robot/imu" />
      <param name="frame_id" value="/$(env ROBOT)/imu" />
      <param name="axis_config" value="yzx" />
      <param name="invert_x_axis" value="false" />
      <param name="invert_y_axis" value="false" />
      <param name="invert_z_axis" value="true" />
      <rosparam param="gravity_vector">[ 0.0, 0.0, -9.80662 ]</rosparam>
      <param name="reference_vector_mode" value="1" />
      <param name="orientation_covariance" value="0.1" />
      <param name="angular_velocity_covariance" value="0.1" />
      <param name="linear_acceleration_covariance" value="0.1" />
    </node>
  </group>
</launch>
